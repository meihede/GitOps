# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application - Dev

env:
  REGISTRY: "registry.digitalocean.com/gitops"
  IMAGE_NAME: "helloworld-dev"
  COMMAND: "python app.py"

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:

  BuildAndTest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest

  BuildAndPushDockerImage:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    #if: github.event_name == 'push'
    #token for registry 2742d94b0116a85cb8e3077dffe936079fd922dfc5517f16bd2757b68d4ec3b1
    needs: BuildAndTest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  DeployDockerImage:
    name: Deploy Docker Image to Dev
    runs-on: ubuntu-latest
    #if: github.event_name == 'push'
    needs: BuildAndPushDockerImage

    steps:
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.APP_HOST }}
          USERNAME: ${{ secrets.APP_USERNAME }}
          #KEY: ${{ secrets.SSHKEY }}
          password: ${{ secrets.APP_PASSWORD }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,COMMAND
          script: |
            # Stop running container
            docker stop $(echo $IMAGE_NAME)

            # Remove old container
            docker rm $(echo $IMAGE_NAME)

            # Run a new container from a new image
            docker run -d \
            --restart always \
            -p 80:80 \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) $(echo $COMMAND)

  SonarCubeScanner:
    name: SonarQube Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
